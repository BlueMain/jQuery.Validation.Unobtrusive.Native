@using jQuery.Validation.Unobtrusive.Native.Demos.Models
@model NumberModel
@section scripts
{
    @Scripts.Render("~/bundles/jquery-validation")
    <script>
        $("form").validate({
            submitHandler: function (form) {
                alert("This is a valid form!");
            }
        });

    </script>
}

<h3>Number</h3>

<p>If a property is an Short, Integer, Long, Byte, Decimal, Single or Double then jQuery.Validate.Unobtrusive.Native applies the <a href="http://validation.bassistance.de/number-method/" target="_blank">number</a> validation method in jQuery Validation.  This validation will also be applied for Nullables of the same types.  Non-nullable numbers also have the <a href="http://validation.bassistance.de/required-method/" target="_blank">required</a> validation method in jQuery Validation applied (as a non-nullable number in .NET has a <a href="http://msdn.microsoft.com/en-us/library/83fhsxwc(v=vs.110).aspx" target="_blank">default value</a>).</p>

<ul class="nav nav-tabs" data-tabs="tabs">
    <li class="active"><a data-toggle="tab" href="#demo">Demo</a></li>
    <li><a data-toggle="tab" href="#model">Model</a></li>
    <li><a data-toggle="tab" href="#view">View</a></li>
    <li><a data-toggle="tab" href="#html">HTML</a></li>
    <li><a data-toggle="tab" href="#javascript">JavaScript</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="demo">
        @using (Html.BeginForm())
        {
            <div class="row">
                @Html.LabelFor(x => x.Short, "Short - a number must be entered:")
                @Html.TextBoxFor(x => x.Short, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableShort, "Nullable Short - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableShort, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Integer, "Integer - a number must be entered:")
                @Html.TextBoxFor(x => x.Integer, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableInteger, "Nullable Integer - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableInteger, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Long, "Long - a number must be entered:")
                @Html.TextBoxFor(x => x.Long, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableLong, "Nullable Long - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableLong, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Byte, "Byte - a number must be entered:")
                @Html.TextBoxFor(x => x.Byte, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableByte, "Nullable Byte - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableByte, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Decimal, "Decimal - a number must be entered:")
                @Html.TextBoxFor(x => x.Decimal, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableDecimal, "Nullable Decimal - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableDecimal, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Single, "Single - a number must be entered:")
                @Html.TextBoxFor(x => x.Single, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableSingle, "Nullable Single - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableSingle, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.Double, "Double - a number must be entered:")
                @Html.TextBoxFor(x => x.Double, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableDouble, "Nullable Double - only numbers can be entered:")
                @Html.TextBoxFor(x => x.NullableDouble, true)
            </div>

            <div class="row">
                <button type="submit" class="btn btn-default">Submit</button>
                <button type="reset" class="btn btn-info">Reset</button>
            </div>
        }

    </div>

    <div class="tab-pane" id="model">
        
        <p>Here's the model, note we have different .NET number types and their associated nullable equivalents:</p>

        <pre class="prettyprint cs">
    using System.ComponentModel.DataAnnotations;

    namespace jQuery.Validation.Unobtrusive.Native.Demos.Models
    {
        public class NumberModel
        {
            public short Short { get; set; }
            public int Integer { get; set; }
            public long Long { get; set; }
            public byte Byte { get; set; }
            public decimal Decimal { get; set; }
            public float Single { get; set; }
            public double Double { get; set; }

            public short? NullableShort { get; set; }
            public int? NullableInteger { get; set; }
            public long? NullableLong { get; set; }
            public byte? NullableByte { get; set; }
            public decimal? NullableDecimal { get; set; }
            public float? NullableSingle { get; set; }
            public double? NullableDouble { get; set; }
        }
    }
        </pre>
    </div>

    <div class="tab-pane" id="view">
        
        <p>Here's the view (which uses the model):</p>

        <pre class="prettyprint cs">
    @@model jQuery.Validation.Unobtrusive.Native.Demos.Models.NumberModel
    @@using (Html.BeginForm())
    {
        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Short, "Short - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Short, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableShort, "Nullable Short - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableShort, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Integer, "Integer - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Integer, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableInteger, "Nullable Integer - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableInteger, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Long, "Long - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Long, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableLong, "Nullable Long - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableLong, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Byte, "Byte - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Byte, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableByte, "Nullable Byte - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableByte, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Decimal, "Decimal - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Decimal, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableDecimal, "Nullable Decimal - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableDecimal, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Single, "Single - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Single, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableSingle, "Nullable Single - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableSingle, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.Double, "Double - a number must be entered:")
            @@Html.TextBoxFor(x =&gt; x.Double, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableDouble, "Nullable Double - only numbers can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableDouble, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    }
        </pre>

    </div>

    <div class="tab-pane" id="html">
        
        <p>Here's the HTML that the view generates:</p>

        <pre class="prettyprint html">
    &lt;form action="/Home/DemosNumber" method="post"&gt;
        &lt;div class="row"&gt;
            &lt;label for="Short"&gt;Short - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Short must be a number." data-msg-required="The Short field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Short" name="Short" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableShort"&gt;Nullable Short - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableShort must be a number." data-rule-number="true" 
                id="NullableShort" name="NullableShort" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Integer"&gt;Integer - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Integer must be a number." data-msg-required="The Integer field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Integer" name="Integer" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableInteger"&gt;Nullable Integer - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableInteger must be a number." data-rule-number="true" 
                id="NullableInteger" name="NullableInteger" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Long"&gt;Long - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Long must be a number." data-msg-required="The Long field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Long" name="Long" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableLong"&gt;Nullable Long - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableLong must be a number." data-rule-number="true"
                id="NullableLong" name="NullableLong" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Byte"&gt;Byte - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Byte must be a number." data-msg-required="The Byte field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Byte" name="Byte" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableByte"&gt;Nullable Byte - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableByte must be a number." data-rule-number="true"
                id="NullableByte" name="NullableByte" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Decimal"&gt;Decimal - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Decimal must be a number." data-msg-required="The Decimal field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Decimal" name="Decimal" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableDecimal"&gt;Nullable Decimal - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableDecimal must be a number." data-rule-number="true"
                id="NullableDecimal" name="NullableDecimal" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Single"&gt;Single - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Single must be a number." data-msg-required="The Single field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Single" name="Single" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableSingle"&gt;Nullable Single - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableSingle must be a number." data-rule-number="true"
                id="NullableSingle" name="NullableSingle" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Double"&gt;Double - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Double must be a number." data-msg-required="The Double field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Double" name="Double" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableDouble"&gt;Nullable Double - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableDouble must be a number." data-rule-number="true"
                id="NullableDouble" name="NullableDouble" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;
        </pre>
    </div>
    
    <div class="tab-pane" id="javascript">
        
        <p>Here's the JavaScript that initialises the validation:</p>

        <pre class="prettyprint js">
  $("form").validate({
      submitHandler: function (form) {
          alert("This is a valid form!");
      }
  });
        </pre>

    </div>

</div>

