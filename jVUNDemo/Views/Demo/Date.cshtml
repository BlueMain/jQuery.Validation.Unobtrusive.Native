@using jQuery.Validation.Unobtrusive.Native.Demos.Models
@model DateModel
@section scripts
{
    @Scripts.Render("~/bundles/jquery-validation")
    <script>
        $("form").validate({
            submitHandler: function (form) {
                alert("This is a valid form!");
            }
        });

    </script>
}

<h3>Date</h3>

<p>If a property is a <code>DateTime</code> then jQuery.Validate.Unobtrusive.Native applies the <a href="http://validation.bassistance.de/date-method/" target="_blank">date</a> validation method in jQuery Validation.  This validation will also be applied for <code>Nullable&lt;DateTime&gt;</code>s.  <code>DateTime</code>s also have the <a href="http://validation.bassistance.de/date-method/" target="_blank">required</a> validation method in jQuery Validation applied (as a <code>DateTime</code> in .NET always has a value).</p>

<ul class="nav nav-tabs" data-tabs="tabs">
    <li class="active"><a data-toggle="tab" href="#demo">Demo</a></li>
    <li><a data-toggle="tab" href="#model">Model</a></li>
    <li><a data-toggle="tab" href="#view">View</a></li>
    <li><a data-toggle="tab" href="#html">HTML</a></li>
    <li><a data-toggle="tab" href="#javascript">JavaScript</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="demo">
        @using (Html.BeginForm())
        {
            <div class="row">
                @Html.LabelFor(x => x.DateTime, "DateTime - a date must be entered:")
                @Html.TextBoxFor(x => x.DateTime, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.NullableDateTime, "Nullable DateTime - only dates can be entered:")
                @Html.TextBoxFor(x => x.NullableDateTime, true)
            </div>

            <div class="row">
                <button type="submit" class="btn btn-default">Submit</button>
                <button type="reset" class="btn btn-info">Reset</button>
            </div>
        }

    </div>

    <div class="tab-pane" id="model">
        
        <p>Here's the model, note we have a DateTime and a Nullable DateTime:</p>

        <pre class="prettyprint cs">
    using System.ComponentModel.DataAnnotations;

    namespace jQuery.Validation.Unobtrusive.Native.Demos.Models
    {
        public class DateModel
        {
            public DateTime DateTime { get; set; }
            public DateTime? NullableDateTime { get; set; }
        }
    }
        </pre>
    </div>

    <div class="tab-pane" id="view">
        
        <p>Here's the view (which uses the model):</p>

        <pre class="prettyprint cs">
    @@model jQuery.Validation.Unobtrusive.Native.Demos.Models.DateModel
    @@using (Html.BeginForm())
    {
        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.DateTime, "DateTime - a date must be entered:")
            @@Html.TextBoxFor(x =&gt; x.DateTime, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.NullableDateTime, "Nullable DateTime - only dates can be entered:")
            @@Html.TextBoxFor(x =&gt; x.NullableDateTime, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    }
        </pre>

    </div>

    <div class="tab-pane" id="html">
        
        <p>Here's the HTML that the view generates:</p>

        <pre class="prettyprint html">
    &lt;form action="/Home/DemosNumber" method="post"&gt;
        &lt;div class="row"&gt;
            &lt;label for="Short"&gt;Short - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Short must be a number." data-msg-required="The Short field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Short" name="Short" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableShort"&gt;Nullable Short - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableShort must be a number." data-rule-number="true" 
                id="NullableShort" name="NullableShort" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Integer"&gt;Integer - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Integer must be a number." data-msg-required="The Integer field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Integer" name="Integer" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableInteger"&gt;Nullable Integer - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableInteger must be a number." data-rule-number="true" 
                id="NullableInteger" name="NullableInteger" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Long"&gt;Long - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Long must be a number." data-msg-required="The Long field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Long" name="Long" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableLong"&gt;Nullable Long - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableLong must be a number." data-rule-number="true"
                id="NullableLong" name="NullableLong" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Byte"&gt;Byte - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Byte must be a number." data-msg-required="The Byte field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Byte" name="Byte" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableByte"&gt;Nullable Byte - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableByte must be a number." data-rule-number="true"
                id="NullableByte" name="NullableByte" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Decimal"&gt;Decimal - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Decimal must be a number." data-msg-required="The Decimal field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Decimal" name="Decimal" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableDecimal"&gt;Nullable Decimal - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableDecimal must be a number." data-rule-number="true"
                id="NullableDecimal" name="NullableDecimal" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Single"&gt;Single - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Single must be a number." data-msg-required="The Single field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Single" name="Single" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableSingle"&gt;Nullable Single - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableSingle must be a number." data-rule-number="true"
                id="NullableSingle" name="NullableSingle" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="Double"&gt;Double - a number must be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field Double must be a number." data-msg-required="The Double field is required." 
                data-rule-number="true" data-rule-required="true" 
                id="Double" name="Double" type="text" value="0" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="NullableDouble"&gt;Nullable Double - only numbers can be entered:&lt;/label&gt;
            &lt;input data-msg-number="The field NullableDouble must be a number." data-rule-number="true"
                id="NullableDouble" name="NullableDouble" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;
        </pre>
    </div>
    
    <div class="tab-pane" id="javascript">
        
        <p>Here's the JavaScript that initialises the validation:</p>

        <pre class="prettyprint js">
  $("form").validate({
      submitHandler: function (form) {
          alert("This is a valid form!");
      }
  });
        </pre>

    </div>

</div>

<p>It's worth noting that the jQuery Validation documentation says of the date validation method:</p> 

<blockquote>"This method should not be used, since it relies on the <code>new Date</code> constructor, which behaves very differently across browsers and locales. Use dateISO instead or one of the locale specific methods (in localizations/ and additional-methods.js)."</blockquote>

<p>If you want to patch the jQuery Validation date validation to be locale specific then you could do worse then look at the steps outlined in a <a href="http://icanmakethiswork.blogspot.com/2012/09/globalize-and-jquery-validate.html" target="_blank">blogpost I wrote</a>.  In my post I replace the jQuery Validation Date method with an implementation that depends on <a href="http://github.com/jquery/globalize" target="_blank">Globalize</a> - you could use the same approach and plug in a different validation mechanism if you wanted.</p>

