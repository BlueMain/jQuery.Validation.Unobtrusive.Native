@using jQuery.Validation.Unobtrusive.Native.Demos.Models
@model RequiredModel
@section scripts
{
    @Scripts.Render("~/bundles/jquery-validation")
    <script>
        $("form").validate({

            errorPlacement: function ($errorLabel, $element) {

                var $elementToInsertAfter = $element;
                if ($element.prop("type") === "radio") {
                    $elementToInsertAfter = $element.closest(".row");

                    $errorLabel.appendTo($elementToInsertAfter);
                } else {
                    $errorLabel.insertAfter($elementToInsertAfter);
                }
            },

            submitHandler: function (form) {
                alert("This is a valid form!");
            }
        });

    </script>
}

<h3>@ViewBag.Title</h3>

<p>The <code>System.ComponentModel.DataAnnotations.RequiredAttribute</code> maps to the <a href="http://jqueryvalidation.org/required-method/" target="_blank">required</a> validation method in jQuery Validation.</p>

<ul class="nav nav-tabs" data-tabs="tabs">
    <li class="active"><a data-toggle="tab" href="#demo">Demo</a></li>
    <li><a data-toggle="tab" href="#model">Model</a></li>
    <li><a data-toggle="tab" href="#view">View</a></li>
    <li><a data-toggle="tab" href="#html">HTML</a></li>
    <li><a data-toggle="tab" href="#javascript">JavaScript</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="demo">
        
        @using (Html.BeginForm())
        {
            <div class="row">
                @Html.LabelFor(x => x.TextBox, "Something must be entered:")
                @Html.TextBoxFor(x => x.TextBox, true)
            </div>

            <div class="row">
                @Html.LabelFor(x => x.DropDownList, "An option must be selected:")
                @Html.DropDownListFor(x => x.DropDownList, true, new List<SelectListItem> {
                    new SelectListItem{ Text = "Please select", Value = "" },
                    new SelectListItem{ Text = "An option", Value = "An option"}
                })
            </div>
    
            <div class="row">
                @Html.LabelFor(x => x.RadioButton, "A radio button must be selected:")
                <label class="radio.inline" for="RequiredString_Yes">
                    @Html.RadioButtonFor(x => x.RadioButton, true, "Yes", new { id = "RequiredString_Yes" })
                    Yes
                </label>
                <label class="radio.inline" for="RequiredString_No">
                    @Html.RadioButtonFor(x => x.RadioButton, true, "No", new { id = "RequiredString_No" })
                    No
                </label>
            </div>

            <div class="row">
                @Html.LabelFor(x => x.TextArea, "Something must be entered:")
                @Html.TextAreaFor(x => x.TextArea, true)
            </div>

            <div class="row">
                <button type="submit" class="btn btn-default">Submit</button>
                <button type="reset" class="btn btn-info">Reset</button>
            </div>
        }

    </div>

    <div class="tab-pane" id="model">
        
        <p>Here's the model, note that the <code>Required</code> attribute decorates each property of the model:</p>

        <pre class="prettyprint cs">
    using System.ComponentModel.DataAnnotations;

    namespace jQuery.Validation.Unobtrusive.Native.Demos.Models
    {
        public class RequiredModel
        {
            [Required]
            public string TextBox { get; set; }

            [Required]
            public string DropDownList { get; set; }

            [Required]
            public string RadioButton { get; set; }

            [Required]
            public string TextArea { get; set; }
        }
    }
        </pre>
    </div>

    <div class="tab-pane" id="view">
        
        <p>Here's the view (which uses the model):</p>

        <pre class="prettyprint cs">
    @@model jQuery.Validation.Unobtrusive.Native.Demos.Models.RequiredModel
    @@using (Html.BeginForm())
    {
        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.TextBox, "Something must be entered:")
            @@Html.TextBoxFor(x =&gt; x.TextBox, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.DropDownList, "An option must be selected:")
            @@Html.DropDownListFor(x =&gt; x.DropDownList, true, new List&lt;SelectListItem&gt; {
                new SelectListItem{ Text = "Please select", Value = "" },
                new SelectListItem{ Text = "An option", Value = "An option"}
            })
        &lt;/div&gt;
    
        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.RadioButton, "A radio button must be selected:")
            &lt;label class="radio.inline" for="RequiredString_Yes"&gt;
                @@Html.RadioButtonFor(x =&gt; x.RadioButton, true, "Yes", new { id = "RequiredString_Yes" })
                Yes
            &lt;/label&gt;
            &lt;label class="radio.inline" for="RequiredString_No"&gt;
                @@Html.RadioButtonFor(x =&gt; x.RadioButton, true, "No", new { id = "RequiredString_No" })
                No
            &lt;/label&gt;
        &lt;/div&gt;

        &lt;div class="row"&gt;
            @@Html.LabelFor(x =&gt; x.TextArea, "Something must be entered:")
            @@Html.TextAreaFor(x =&gt; x.TextArea, true)
        &lt;/div&gt;

        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    }
        </pre>

    </div>

    <div class="tab-pane" id="html">
        
        <p>Here's the HTML that the view generates:</p>

        <pre class="prettyprint html">
    &lt;form action="/Demo/Required" method="post"&gt;
        &lt;div class="row"&gt;
            &lt;label for="TextBox"&gt;Something must be entered:&lt;/label&gt;
            &lt;input data-msg-required="The TextBox field is required." 
                   data-rule-required="true" 
                   id="TextBox" name="TextBox" type="text" value="" /&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="DropDownList"&gt;An option must be selected:&lt;/label&gt;
            &lt;select data-msg-required="The DropDownList field is required." 
                    data-rule-required="true" 
                    id="DropDownList" name="DropDownList"&gt;
                &lt;option value=""&gt;Please select&lt;/option&gt;
                &lt;option value="An option"&gt;An option&lt;/option&gt;
            &lt;/select&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="RadioButton"&gt;A radio button must be selected:&lt;/label&gt;
            &lt;label class="radio.inline" for="RequiredString_Yes"&gt;
                &lt;input data-msg-required="The RadioButton field is required." 
                       data-rule-required="true" 
                       id="RequiredString_Yes" name="RadioButton" type="radio" value="Yes" /&gt;
                Yes
            &lt;/label&gt;
            &lt;label class="radio.inline" for="RequiredString_No"&gt;
                &lt;input id="RequiredString_No" name="RadioButton" type="radio" value="No" /&gt;
                No
            &lt;/label&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;label for="TextArea"&gt;Something must be entered:&lt;/label&gt;
            &lt;textarea cols="20" 
                      data-msg-required="The TextArea field is required." 
                      data-rule-required="true" 
                      id="TextArea" name="TextArea" rows="2"&gt;&lt;/textarea&gt;
        &lt;/div&gt;
        &lt;div class="row"&gt;
            &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;
            &lt;button type="reset" class="btn btn-info"&gt;Reset&lt;/button&gt;
        &lt;/div&gt;
    &lt;/form&gt;
        </pre>
    </div>
    
    <div class="tab-pane" id="javascript">
        
        <p>The <code>errorPlacement</code> option below is only in place so that radio validations are styled a little nicer.</p>

        <pre class="prettyprint js">
  $("form").validate({
      errorPlacement: function($errorLabel, $element) {

          var $elementToInsertAfter = $element;
          if ($element.prop("type") === "radio") {
              $elementToInsertAfter = $element.closest(".controls");
          } 
      
          $errorLabel.insertAfter($elementToInsertAfter);
      },

      submitHandler: function (form) {
          alert("This is a valid form!");
      }
  });
        </pre>

    </div>

</div>

